apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.name }}
  labels:
    app: {{ .Values.name }}
    group: {{ .Values.group }}
    version: {{ .Values.version }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.name }}
      group: {{ .Values.group }}
      version: {{ .Values.version }}
  template:
    metadata:
      labels:
        app: {{ .Values.name }}
        group: {{ .Values.group }}
        version: {{ .Values.version }}
    spec:
      {{ if .Values.imagePullSecret -}}
        imagePullSecrets:
          - name: {{ .Values.imagePullSecret }}
      {{- end }}
      containers:
        - name: main
          image: {{ printf "\"%s:%s\"" .Values.image .Values.version }}
          resources:
            limits:
              cpu: 100m
              memory: 128Mi
            requests:
              cpu: 100m
              memory: 64Mi
          env:
            - name: CMS_EXTERNAL_URI
              value: {{ printf "\"%s://%s:%s%s\"" .Values.cms.external.protocol ( default .Values.backend.ip .Values.backend.hostname ) ( toString .Values.cms.external.port ) .Values.cms.external.path }}
            - name: CMS_INTERNAL_URI
              value: {{ printf "\"%s://%s:%s%s\"" .Values.cms.internal.protocol .Values.cms.internal.hostname ( toString .Values.cms.internal.port ) .Values.cms.internal.path }}
            - name: PRODUCTS_EXTERNAL_URI
              value: {{ printf "\"%s://%s:%s%s\"" .Values.products.external.protocol ( default .Values.backend.ip .Values.backend.hostname ) ( toString .Values.products.external.port ) .Values.products.external.path }}
            - name: PRODUCTS_INTERNAL_URI
              value: {{ printf "\"%s://%s:%s%s\"" .Values.products.internal.protocol .Values.products.internal.hostname ( toString .Values.products.internal.port ) .Values.products.internal.path }}
            - name: PORT
              value: "80"
            - name: HOST
              value: "0.0.0.0"
          ports:
            - containerPort: 80
          readinessProbe:
            tcpSocket:
              port: 80
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.name }}
  labels:
    app: {{ .Values.name }}
    group: {{ .Values.group }}
    version: {{ .Values.version }}
spec:
  type: {{ template "helpers.service.type" .Values.env }}
  selector:
    app: {{ .Values.name }}
    group: {{ .Values.group }}
    version: {{ .Values.version }}
  ports:
    {{- with .Values.ports.main }}
    - name: {{ printf "\"%s-%s\"" .protocol .name }}
      port: {{ .port }}
      protocol: TCP
      targetPort: 80
    {{- end }}
